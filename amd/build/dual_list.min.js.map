{"version":3,"sources":["../src/dual_list.js"],"names":["define","$","bootstrap","str","init","on","parents","hasClass","toggleClass","checkBox","find","attr","badgeDetail","buttonIcon","show","removeClass","addClass","hide","click","$button","actives","clone","appendTo","remove","sortBadgeElements","liRElement","val","createListIds","liLElement","$checkBox","closest","e","preventDefault","dialog","get_strings","key","component","then","dialogStringsTranslation","console","log","autoOpen","width","title","draggable","modal","resizable","closeOnEscape","closeText","buttons","text","id","window","location","href","classElement","liElements","sortList","Array","prototype","sort","bind","a","b","aText","bText","append","elements","i","len","length","property","tagName","value"],"mappings":"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","sourcesContent":["/* jshint ignore:start */\ndefine(['jquery', 'jqueryui', 'core/str'], function($, bootstrap, str) {\n\n    /**\n     * Dual list management for course badges.\n     */\n    function init() {\n        $('body').on('click', '.list-group .list-group-item .badge-content', function() {\n            if (!$(this).parents('td').hasClass('read-only') && !$(this).parents('td').hasClass('no-modif')) {\n                $(this).parents('.list-group-item').toggleClass('active');\n                var checkBox = $(this).find('input[type=checkbox]');\n                checkBox.attr(\"checked\", !checkBox.attr(\"checked\"));\n            }\n        });\n\n        $('body').on('click', '.action-btn', function() {\n            var badgeDetail = $(this).parents('.list-group-item').find('.badge-detail');\n            var buttonIcon = $(this).find('i');\n            if (buttonIcon.hasClass('fa-sort-up')\n                || buttonIcon.hasClass('fa-sort-asc')) {\n                badgeDetail.show();\n                buttonIcon.removeClass('fa-sort-up').addClass('fa-sort-down');\n                buttonIcon.removeClass('fa-sort-asc').addClass('fa-sort-desc');\n            } else {\n                badgeDetail.hide();\n                buttonIcon.removeClass('fa-sort-down').addClass('fa-sort-up');\n                buttonIcon.removeClass('fa-sort-desc').addClass('fa-sort-asc');\n            }\n        });\n\n        $('.list-arrows button').click(function() {\n            var $button = $(this),\n                actives = '';\n            if ($button.hasClass('move-left')) {\n                actives = $('.list-right ul.list-group li.list-group-item.active');\n                actives.clone().appendTo('.list-left ul.list-group');\n                actives.remove();\n\n            } else if ($button.hasClass('move-right')) {\n                actives = $('.list-left ul.list-group li.list-group-item.active');\n                actives.clone().appendTo('.list-right ul.list-group');\n                actives.remove();\n            }\n\n            sortBadgeElements('.list-left');\n            sortBadgeElements('.list-right');\n\n            var liRElement = $('.list-right ul.list-group li.list-group-item');\n            $('input[name=\"rightlistids\"]').val(createListIds(liRElement));\n            var liLElement = $('.list-left ul.list-group li.list-group-item');\n            $('input[name=\"leftlistids\"]').val(createListIds(liLElement));\n\n        });\n\n        $('.dual-list .selector').click(function() {\n            var $checkBox = $(this);\n            if (!$checkBox.hasClass('selected')) {\n                $checkBox.addClass('selected')\n                .closest('.content')\n                .find('ul.list-group li.list-group-item:not(.active)')\n                .addClass('active');\n            } else {\n                $checkBox.removeClass('selected')\n                .closest('.content')\n                .find('ul.list-group li.list-group-item.active')\n                .removeClass('active');\n            }\n        });\n\n        $(\"#id_changebadgeselections\").click(function(e) {\n            e.preventDefault();\n            $('#dialog_change_badge_selections').show();\n            $('#dialog_change_badge_selections').dialog('open');\n        });\n\n        var dialogStrings = [\n            {\n                key: 'changeselectedbadges',\n                component: 'mod_coursebadges'\n            },\n            {\n                key: 'closewindow',\n            },\n            {\n                key: 'yes',\n            },\n            {\n                key: 'cancel',\n            }\n        ];\n\n        str.get_strings(dialogStrings).then(function(dialogStringsTranslation) {\n            console.log(dialogStringsTranslation);\n            $(\"#dialog_change_badge_selections\").dialog({\n                autoOpen: false,\n                width: 400,\n                title: dialogStringsTranslation[0],\n                draggable: \"false\",\n                modal: true,\n                resizable: false,\n                closeOnEscape: false,\n                closeText: dialogStringsTranslation[1],\n                buttons: [{\n                    text: dialogStringsTranslation[2],\n                    id: \"btValidate\",\n                    click: function() {\n                        window.location.href = window.location.href + \"&dbs=1\";\n                    }\n                },\n                {\n                    text: dialogStringsTranslation[3],\n                    id: \"btCancel\",\n                    click: function() {\n                        $(this).dialog(\"close\");\n                    }\n                }]\n            });\n        });\n        \n    }\n\n    /**\n     * Badges sorting.\n     * @param {string} classElement Class name string containing the list of badges.\n    */\n    function sortBadgeElements(classElement) {\n        var liElements = $(classElement + ' ul.list-group').find('li.list-group-item');\n        var sortList = Array.prototype.sort.bind(liElements);\n\n        sortList(function(a, b) {\n\n            // Cache inner content from the first element (a) and the next sibling (b)\n            var aText = $(a).find('.badge-title').text();\n            var bText = $(b).find('.badge-title').text();\n\n            // Returning -1 will place element `a` before element `b`\n            if (aText < bText) {\n                return -1;\n            }\n\n            // Returning 1 will do the opposite\n            if (aText > bText) {\n                return 1;\n            }\n\n            // Returning 0 leaves them as-is\n            return 0;\n        });\n\n        $(classElement + ' ul.list-group').append(liElements);\n    }\n\n    /**\n     * Create badge ID list.\n     * @param {object} HTML elements object list containing badge informations.\n     * @return {string} Badge ID list separated by comma.\n    */\n    function createListIds(elements) {\n        var i = 0;\n        var len = elements.length;\n        var str = \"\";\n        if (len > 0) {\n            var property;\n            for (property in elements) {\n                if (elements[property].tagName == 'LI') {\n                    if (i == len - 1) {\n                        str += elements[property].value;\n                    } else {\n                        str += elements[property].value + \",\";\n                    }\n                    i++;\n                }\n            }\n        }\n        return str;\n    }\n\n    return {\n        init: function() {\n            init();\n        }\n    };\n});"],"file":"dual_list.min.js"}