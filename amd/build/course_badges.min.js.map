{"version":3,"sources":["../src/course_badges.js"],"names":["define","$","str","initJtable","columns","table","ajaxbaseurl","defaultsorting","wwwroot","M","cfg","append","val","JSON","parse","imgurl","display","data","record","badgeurl","modname","r","res","i","modnames","length","name","percent","urlearnedbadge","urlselectedbadge","badgeearnedcount","badgetotal","badgepercent","groupnames","earnedbadges","badge_url","img_url","selectedbadges","selectionTable","jtable","paging","pageSize","pageSizes","selecting","multiselect","sorting","defaultSorting","jqueryuiTheme","defaultDateFormat","get_string","gotoPageArea","actions","listAction","postData","jtParams","Deferred","$dfd","serialize","ajax","url","jtStartIndex","jtPageSize","jtSorting","type","dataType","success","resolve","error","reject","fields","initSelectOverview","change","initNameInput","timer","on","clearTimeout","setTimeout"],"mappings":"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","sourcesContent":["/* jshint ignore:start */\ndefine(['jquery', 'core/str', 'mod_coursebadges/jtable'], function($, str) {\n\n    /** \n     * Fonction qui initialise le jTable utilisé pour les overview\n     * @param {String} columns Object JSON contenant toutes les colonnes du jTable\n     * @param {String} table Identifiant de la div qui contient le jTable\n     * @param {String} ajaxbaseurl Lien du fichier ajax\n     * @param {String} defaultsorting Colonnes concernées par le tri + valeur par défaut\n    */\n    function initJtable(columns, table, ajaxbaseurl, defaultsorting) {\n        var wwwroot = M.cfg.wwwroot;\n        $('head').append('<link rel=\"stylesheet\" type=\"text/css\" href=\"'+wwwroot+'/lib/jquery/ui-1.12.1/jquery-ui.min.css\">');\n\n        columns = $('input[name=\"' + columns + '\"]').val();\n        columns = JSON.parse(columns);\n\n        if (columns.imgurl) {\n            columns.imgurl.display = function(data) {\n                if (data.record.badgeurl) {\n                    return '<a href=\"'\n                    + data.record.badgeurl\n                    + '\"><img class=\"cb_overviewbadge\" src=\"'\n                    + data.record.imgurl\n                    + '\"/></a>';\n                }\n                return '<img class=\"cb_overviewbadge\" src=\"' + data.record.imgurl + '\"/>';\n            };\n        }\n\n        if (columns.modname) {\n            columns.modname.display = function(data) {\n                var r = data.record;\n                var res = '';\n                for (var i = 0; i < r.modnames.length; i++) {\n                    res += r.modnames[i].name + '<br/>';\n                }\n                return res;\n            };\n        }\n\n        if (columns.percent) {\n            columns.percent.display = function(data) {\n                var r = data.record;\n                if (r.urlearnedbadge && r.urlselectedbadge) {\n                    return '<p><a href=\"' + r.urlearnedbadge + '\">'\n                    + r.badgeearnedcount + '</a>/<a href=\"'\n                    + r.urlselectedbadge + '\">'\n                    + r.badgetotal + '</a> ('\n                    + r.badgepercent + '%)</p>';\n                }\n                return '<p>' + r.badgeearnedcount + '/' + r.badgetotal + ' (' + r.badgepercent + '%)</p>';\n            };\n        }\n\n        if (columns.groupnames) {\n            columns.groupnames.display = function(data) {\n                var r = data.record;\n                var res = '';\n                for (var i = 0; i < r.groupnames.length; i++) {\n                    res += r.groupnames[i].name + '<br/>';\n                }\n                return res;\n            };\n        }\n\n        if (columns.earnedbadges) {\n            columns.earnedbadges.display = function(data) {\n                var r = data.record;\n                var res = '';\n                for (var i = 0; i < r.earnedbadges.length; i++) {\n                    if (r.earnedbadges[i].badge_url) {\n                        res += '<a href=\"'\n                        + r.earnedbadges[i].badge_url\n                        + '\"><img class=\"cb_overviewbadge_mini\" src=\"'\n                        + r.earnedbadges[i].img_url + '\"/></a>';\n                    } else {\n                        res += '<img class=\"cb_overviewbadge_mini\" src=\"' + r.earnedbadges[i].img_url + '\"/>';\n                    }\n                }\n                return res;\n            };\n        }\n\n        if (columns.selectedbadges) {\n            columns.selectedbadges.display = function(data) {\n                var r = data.record;\n                var res = '';\n                for (var i = 0; i < r.selectedbadges.length; i++) {\n                    if (r.selectedbadges[i].badge_url) {\n                        res += '<a href=\"'\n                        + r.selectedbadges[i].badge_url\n                        + '\"><img class=\"cb_overviewbadge_mini\" src=\"'\n                        + r.selectedbadges[i].img_url\n                        + '\"/></a>';\n                    } else {\n                        res += '<img class=\"cb_overviewbadge_mini\" src=\"' + r.selectedbadges[i].img_url + '\"/>';\n                    }\n                }\n                return res;\n            };\n        }\n\n        var selectionTable = $(\"#\" + table).jtable({\n            paging: true,\n            pageSize: 10,\n            pageSizes: [10, 25, 50, 100],\n            selecting: false,\n            multiselect: false,\n            sorting: true,\n            defaultSorting: defaultsorting,\n            jqueryuiTheme: true,\n            defaultDateFormat: str.get_string('dateformat', 'mod_coursebadges'),\n            gotoPageArea: \"none\",\n            actions: {\n                listAction: function(postData, jtParams) {\n                    return $.Deferred(function($dfd) {\n                        postData = $('#mform1').serialize();\n                        $.ajax({\n                            url: ajaxbaseurl\n                            + '&si=' + jtParams.jtStartIndex\n                            + '&ps=' + jtParams.jtPageSize\n                            + '&so=' + jtParams.jtSorting,\n                            type: \"POST\",\n                            dataType: \"json\",\n                            data: postData,\n                            success: function(data) {\n                                $dfd.resolve(data);\n                            },\n                            error: function() {\n                                $dfd.reject();\n                            }\n                        });\n                    });\n                },\n            },\n            fields: columns\n        });\n\n        selectionTable.jtable(\"load\");\n    }\n\n   /**\n    * Fonction qui gère la recherche par groupe, badge et par statut\n    */\n    function initSelectOverview() {\n        $('#mform1 select').change(function() {\n            $(\"#results\").jtable(\"load\");\n        });\n    }\n\n   /**\n    * Fonction qui gère la recherche par nom et prénom des participants\n    * @param {String} name \n    */\n    function initNameInput(name) {\n        var timer;\n        $('#mform1 input[name=\"' + name + '\"]').on('keyup', function() {\n            clearTimeout(timer);\n            timer = setTimeout(function() {\n                $(\"#results\").jtable(\"load\");\n            }, 500);\n        });\n    }\n\n    return {\n        initJtable: initJtable,\n        initSelectOverview: initSelectOverview,\n        initNameInput: initNameInput\n    };\n});"],"file":"course_badges.min.js"}